name: Cypress Tests

on:
  workflow_call:

jobs:
  e2e:
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_DB: development
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: "Get Code"
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: oven-sh/setup-bun@v1
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3

        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: bun list

      - name: Compile node modules
        run: |
          bun install
          bun run build
        working-directory: ./frontend
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb curl
      - name: Install Python dependencies
        run: |
          sudo apt-get install -y python3-pip
          sudo pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip3 install poetry
          poetry install
          nohup uvicorn main:app --host 127.0.0.1 --port 8000 &
          sleep 10
          echo $(curl http://127.0.0.1:8000/jobs/fetch_routes)
        env:
          CONTENT_EXPIRE: ${{ secrets.CONTENT_EXPIRE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES }}
          JWT_REFRESH_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRE_MINUTES}}
          JWT_AUTH_TOKEN: ${{ secrets.JWT_AUTH_TOKEN }}
          APP_ENV: "github"
          TNSR_DOMAIN: "http://127.0.0.1:3000"
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
          POSTGRES_USERNAME: "admin"
          POSTGRES_PASSWORD: "password"
          POSTGRES_DATABASE: "development"
          REDIS_BROKER: "redis://127.0.0.1:6379/0"
          REDIS_BACKEND: "redis://127.0.0.1:6379/0"
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: "6379"
          HOST: "127.0.0.1"
          PORT: "8000"
        working-directory: ./backend
      - name: Ping FastAPI server
        run: |
          echo $(curl http://127.0.0.1:8000/jobs/fetch_routes)
      - name: Cypress Headed Test
        run: |
          nohup npm run ga &
          npx cypress run --headed
        env:
          BASEURL: "http://127.0.0.1:8000"
          NODE_ENV: "development"
          STRIPE_PUBLIC: ${{ secrets.STRIPE_PUBLIC }}
        working-directory: ./frontend
