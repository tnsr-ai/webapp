name: E2E Testing (Container)
on:
  push:
    branches:
      - development
      - production
jobs:
  cypress_e2e:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: amitbera
          POSTGRES_DB: development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7.2.3
        ports:
          - 6379:6379
        options: --health-cmd redis-cli ping --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Ubuntu dependencies
        run: |
          sudo apt update
          sudo apt install -y ffmpeg
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install Poetry dependencies
        run: poetry install
        working-directory: ./backend
        env:
          CONTENT_EXPIRE: ${{ secrets.CONTENT_EXPIRE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES }}
          JWT_REFRESH_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRE_MINUTES }}
          JWT_AUTH_TOKEN: ${{ secrets.JWT_AUTH_TOKEN }}
          ENV: "development"
          TNSR_DOMAIN: "https://localhost:3000"
      - name: Start FastAPI and setup secrets env
        run: uvicorn app.main:app --port 8000 & sleep 10
        working-directory: ./backend
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-
      - name: Install Dependencies
        run: npm ci --ignore-scripts
        working-directory: ./frontend
        env:
          BASEURL: "http://localhost:8000"
          NODE_ENV: "development"
          STRIPE_PUBLIC: ${{ secrets.STRIPE_PUBLIC }}
      - name: Install Cypress Dependencies
        run: sudo apt install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - name: Cypress.io
        uses: cypress-io/github-action@v6.6.0
        with:
          build: npm run build
          start: npm run start
          wait-on: "http://localhost:3000"
          working-directory: ./frontend
